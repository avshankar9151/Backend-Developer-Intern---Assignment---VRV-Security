name: CI / CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    environment: testing
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run migrations
        env:
          ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
        run: |
          python manage.py makemigrations
          python manage.py migrate

      - name: Run tests
        run: python manage.py test

  deploy:
    runs-on: ubuntu-latest
    needs: test  # This ensures that the deploy job runs only after the test job has completed successfully
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.13'
          
      - name: Deploy to VPS
        env:
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_SSH_KEY: ${{ secrets.VPS_SSH_KEY }}
          VPS_PROJECT_PATH: ${{ secrets.VPS_PROJECT_PATH }}
          ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}

        run: |
          echo "$VPS_SSH_KEY" > private_key
          chmod 600 private_key

          # Add the host key to known_hosts
          mkdir -p ~/.ssh
          ssh-keyscan -H $VPS_HOST >> ~/.ssh/known_hosts
          
          scp -i private_key -o StrictHostKeyChecking=ask -r ./* $VPS_USER@$VPS_HOST:$VPS_PROJECT_PATH
          ssh -i private_key -o StrictHostKeyChecking=ask $VPS_USER@$VPS_HOST << EOF
            cd $VPS_PROJECT_PATH
            source venv/bin/activate
            pip install --upgrade pip  # Ensure pip is up-to-date
            pip install -r requirements.txt  # Install dependencies
            python manage.py makemigrations
            python manage.py migrate
            python manage.py collectstatic --noinput
          EOF
